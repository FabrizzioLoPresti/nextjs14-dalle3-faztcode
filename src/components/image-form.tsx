'use client';

import { useState, useRef, useTransition } from 'react';
import Image from 'next/image';
import { useFormStatus } from 'react-dom';
import { generateImageAction } from '@/actions/generate-image-action';

type Props = {};

const ImageForm = (props: Props) => {
  const [urlImage, setUrlImage] = useState<string>('');
  const { pending } = useFormStatus();
  const [isPending, startTransition] = useTransition();
  const formRef = useRef<HTMLFormElement>(null);

  return (
    <div className="flex flex-col items-center gap-y-6">
      <form
        action={async (formData: FormData) => {
          startTransition(async () => {
            const url = await generateImageAction(formData);
            setUrlImage(url);
            formRef.current?.reset();
          });
        }}
        className="flex flex-col max-w-xl w-full mx-auto mt-12"
        ref={formRef}
      >
        <input
          type="text"
          id="prompt"
          name="prompt"
          placeholder="Write your prompt"
          className="p-2 border border-gray-300 rounded-md text-black"
        />
        <button
          type="submit"
          className="p-2 mt-2 bg-blue-600 text-white rounded-md disabled:opacity-50 disabled:cursor-not-allowed"
          disabled={isPending}
        >
          {isPending ? 'Generating...' : 'Generate Image'}
        </button>
      </form>
      {urlImage && (
        <Image
          src={urlImage}
          alt="Image Generated by AI"
          width={512}
          height={512}
        />
      )}
    </div>
  );
};

export default ImageForm;
